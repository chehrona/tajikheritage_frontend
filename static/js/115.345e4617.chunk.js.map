{"version":3,"file":"static/js/115.345e4617.chunk.js","mappings":"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","sources":["components/common/cardWrapper/cardWrapperStyles.ts","components/common/cardWrapper/CardWrapper.tsx","components/common/pageWrapper/LandingPageFirstContainer.tsx","components/common/pageWrapper/pageWrapperStyles.ts","errorPages/pageNotFound/pageNotFoundStyles.ts","errorPages/pageNotFound/PageNotFound.tsx","hooks/useSetHeader.tsx","hooks/useToasts.tsx","components/common/sectionCard/sectionCardStyles.ts","components/common/sectionCard/SectionCard.tsx","landingPages/landingPage/landingPageStyles.ts","landingPages/landingPage/LandingPage.tsx","services/storeVisit.ts","services/request.ts"],"sourcesContent":["import styled, { css, keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n// Types\nimport { LinkProps } from './types/styleTypes';\n\nconst slideOut = keyframes`\n    0% {\n        transform: translateX(100%);\n        opacity: 0;\n    }\n    50% {\n        transform: translateX(0);\n        opacity: 1;\n    }\n    100% {\n        transform: translateX(0);\n        opacity: 1;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)<LinkProps>`\n    text-decoration: none;\n    border-radius: var(--small-radius);\n    animation: ${slideOut} 1s ease-in-out forwards;\n    transition: border-radius 250ms, box-shadow 400ms;\n    height: ${({ $type }) => ($type === 'long' ? '35rem' : '25rem')};\n    width: ${({ $type }) => ($type === 'long' ? '23rem' : '25rem')};\n\n    ${({ $disabled }) =>\n        $disabled\n            ? css`\n                  filter: brightness(0.5);\n                  cursor: default;\n\n                  &:hover {\n                      border-radius: initial;\n                      box-shadow: initial;\n                  }\n\n                  > * {\n                      border-radius: var(--small-radius);\n                  }\n              `\n            : css`\n                  pointer-events: all;\n                  filter: brightness(1);\n                  cursor: pointer;\n\n                  &:hover {\n                      border-radius: var(--big-radius);\n                      box-shadow: var(--primary-box-shadow)\n                          var(--primary-shadow-color);\n                  }\n\n                  > * {\n                      border-radius: var(--small-radius);\n                      transition: border-radius 250ms;\n\n                      &:hover {\n                          border-radius: var(--big-radius);\n                      }\n                  }\n              `}\n\n    @media (max-width: 480px) {\n        box-shadow: var(--primary-box-shadow) var(--primary-shadow-color);\n        height: ${({ $type }) => ($type === 'long' ? '16rem' : '16rem')};\n        width: ${({ $type }) => ($type === 'long' ? '10.3rem' : '16rem')};\n\n        &:hover {\n            border-radius: var(--small-radius);\n            transition: initial;\n\n            > * {\n                border-radius: var(--small-radius);\n\n                &:hover {\n                    border-radius: var(--small-radius);\n                }\n            }\n        }\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        box-shadow: var(--primary-box-shadow) var(--primary-shadow-color);\n        width: 25rem;\n        ${({ $type }) =>\n            $type === 'long'\n                ? css`\n                      border-radius: var(--big-radius);\n                      height: 35rem;\n\n                      > * {\n                          border-radius: var(--big-radius);\n                      }\n                  `\n                : css`\n                      border-radius: var(--small-radius);\n                      height: 25rem;\n\n                      > * {\n                          border-radius: var(--small-radius);\n                      }\n                  `}\n    }\n`;\n","import React from 'react';\n\n// Types\nimport { CardWrapperProps } from './types/componentTypes';\n\n// Styled components\nimport { StyledLink } from './cardWrapperStyles';\nimport { useToasts } from '../../../hooks/useToasts';\n\nconst CardWrapper: React.FC<CardWrapperProps> = ({\n    page,\n    disabled = false,\n    children,\n    type,\n}) => {\n    const { showToast } = useToasts();\n\n    const handleNoContent = () => {\n        if (disabled) {\n            showToast('ARTICLE_UNAVAILABLE', 'info', page);\n        }\n    };\n\n    return (\n        <StyledLink\n            $type={type}\n            $disabled={disabled}\n            to={disabled ? '#' : page}\n            onClick={handleNoContent}\n        >\n            {children}\n        </StyledLink>\n    );\n};\n\nexport default CardWrapper;\n","import React, { ReactNode } from 'react';\n\n//Styled components\nimport { LandingContainer } from './pageWrapperStyles';\n\nconst LandingPageFirstContainer: React.FC<{ children: ReactNode }> = ({\n    children,\n}) => {\n    return <LandingContainer>{children}</LandingContainer>;\n};\n\nexport default LandingPageFirstContainer;\n","import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n    0% {\n        opacity: 0;\n    }\n    50% {\n        opacity: 1;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\n// Article page *************************\nexport const ArticleContainer = styled.div`\n    position: relative;\n    box-sizing: border-box;\n    background-color: var(--regular-white-color);\n    padding: 2rem var(--page-padding) 4rem var(--page-padding);\n    animation: ${fadeIn} 1s ease-in-out forwards;\n    overflow-x: hidden;\n    min-height: 100svh;\n\n    @media (max-width: 480px) {\n        padding: 0rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        padding: var(--page-padding);\n    }\n`;\n\n// Landing page *************************\nexport const LandingContainer = styled.div`\n    box-sizing: border-box;\n    padding: 2rem var(--page-padding) 4rem var(--page-padding);\n    background: var(--regular-white-color);\n    animation: ${fadeIn} 1s ease-in-out forwards;\n    overflow-x: hidden;\n    min-height: 100svh;\n\n    @media (max-width: 480px) {\n        padding: var(--page-padding) var(--page-padding)\n            calc(4 * var(--page-padding)) var(--page-padding);\n    }\n`;\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n    width: 100%;\n    height: calc(100svh - var(--header-height));\n    background-image: url('/customAssets/footer_grid.webp.png');\n    background-size: calc(100vw / 4);\n    background-repeat: repeat;\n    background-position: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media (max-width: 480px) {\n        background-size: 100vw;\n    }\n`;\n\nexport const CodeWrapper = styled.div`\n    height: 15rem;\n    width: 25rem;\n    border-radius: var(--small-radius);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--regular-black-color);\n    box-shadow: var(--primary-box-shadow) var(--primary-white-color);\n\n    @media (max-width: 480px) {\n        height: 10rem;\n        width: 20rem;\n    }\n`;\n\nexport const Code = styled.div`\n    font-size: 5rem;\n    font-family: var(--blocky-font);\n    color: var(--primary-red-color);\n\n    @media (max-width: 480px) {\n        font-size: var(--header-large);\n    }\n`;\n\nexport const ErrorMessage = styled.div`\n    font-size: 1.5rem;\n    font-family: var(--fancy-font);\n    color: var(--primary-white-color);\n\n    @media (max-width: 480px) {\n        font-size: var(--header-normal);\n    }\n`;\n","import React from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../hooks/useGlobalData';\nimport { useSetHeader } from '../../hooks/useSetHeader';\n\n// Helper\nimport alertMessages from '../../miscellaneous/alertMessages.json';\n\n// Components\nimport AppLayout from '../../AppLayout';\n\n// Styled components\nimport {\n    MainContainer,\n    CodeWrapper,\n    Code,\n    ErrorMessage,\n} from './pageNotFoundStyles';\n\nconst PageNotFound: React.FC = () => {\n    const { lang } = useGlobalData();\n\n    useSetHeader('reset');\n\n    return (\n        <AppLayout>\n            <MainContainer>\n                <CodeWrapper>\n                    <Code>404</Code>\n                    <ErrorMessage>\n                        {alertMessages.PAGE_NOT_FOUND[lang]}\n                    </ErrorMessage>\n                </CodeWrapper>\n            </MainContainer>\n        </AppLayout>\n    );\n};\n\nexport default PageNotFound;\n","import React, { useEffect } from 'react';\n\n// Hooks\nimport { useGlobalData } from './useGlobalData';\n\n// Services\nimport { requestPage } from '../services/request';\n\n// Helper\nimport staticTexts from '../miscellaneous/staticTexts.json';\n\n// Types\nimport { Langs } from '../appTypes';\nimport { HeaderDataType, Section, TitleProps } from './hookTypes';\n\nexport const useSetHeader = (page: string, type?: string, pageData?: any) => {\n    const { title, setTitle } = useGlobalData();\n\n    const modifiedPage =\n        type === 'landing' ? page : page.substring(0, page.indexOf('/'));\n\n    const link =\n        type === 'middle'\n            ? page.substring(page.indexOf('_') + 1)\n            : page.substring(page.indexOf('/') + 1, page.length - 1);\n\n    useEffect(() => {\n        const fetchHeaderData = async () => {\n            try {\n                const headerData = await requestPage(modifiedPage);\n\n                let tempHeader = { ...title };\n\n                if (type === 'landing') {\n                    updateLandingPageTitle(tempHeader, headerData);\n                } else {\n                    updatePageTitle(tempHeader, headerData);\n                }\n\n                setTitle(tempHeader);\n            } catch (error: any) {\n                setTitle(staticTexts.HEADER);\n            }\n        };\n\n        if (page === 'reset') {\n            setTitle(staticTexts.HEADER);\n        } else {\n            fetchHeaderData();\n        }\n    }, [page, pageData]);\n\n    const updateLandingPageTitle = (\n        tempHeader: TitleProps,\n        headerData: HeaderDataType,\n    ) => {\n        const { header } = headerData;\n\n        for (const key in title) {\n            const typedKey = key as Langs;\n            let titleArr = [...title[typedKey]];\n\n            // New title\n            const newItem = [`${header[typedKey].toUpperCase()}`, ''];\n\n            titleArr[1] = newItem;\n\n            tempHeader[typedKey] = titleArr;\n        }\n    };\n\n    const updatePageTitle = (\n        tempHeader: TitleProps,\n        headerData: HeaderDataType,\n    ) => {\n        const { header, sections } = headerData;\n\n        sections?.forEach((section: Section) => {\n            const { link: sectionLink, cardTitle: sectionTitle } = section;\n\n            if (sectionLink === link) {\n                for (const key in title) {\n                    const typedKey = key as Langs;\n\n                    let titleArr = [...title[typedKey]];\n                    let newItem = [];\n\n                    if (type === 'middle') {\n                        newItem = [\n                            `${header[typedKey].toUpperCase()}`,\n                            `${\n                                sectionTitle[typedKey] !== undefined\n                                    ? sectionTitle[typedKey]\n                                    : ''\n                            }`,\n                        ];\n                    } else {\n                        newItem = [\n                            `${sectionTitle[typedKey].toUpperCase()}`,\n                            `${\n                                pageData?.name[typedKey] !== undefined\n                                    ? pageData?.name[typedKey]\n                                    : ''\n                            }`,\n                        ];\n                    }\n\n                    titleArr[1] = newItem;\n                    tempHeader[typedKey] = titleArr;\n                }\n            }\n        });\n    };\n};\n","import React, { useEffect, useRef } from 'react';\nimport { toast } from 'react-toastify';\n\n// Hooks\nimport { useGlobalData } from './useGlobalData';\nimport { useLocation } from 'react-router-dom';\n\n// Static messages\nimport alertMessages from '../miscellaneous/alertMessages.json';\n\n// Types\nimport { ToastTypes } from './hookTypes';\ntype AlertMessageKey = keyof typeof alertMessages;\n\nexport const useToasts = () => {\n    const { lang } = useGlobalData();\n    const { pathname } = useLocation();\n    const toastsRef = useRef<{\n        [id: string]: { key: AlertMessageKey };\n    }>({});\n\n    const showToast = (key: AlertMessageKey, type: ToastTypes, id: string) => {\n        const message = alertMessages[key][lang];\n\n        toastsRef.current[id] = { key };\n\n        switch (type) {\n            case 'info':\n                return toast.info(message, {\n                    toastId: id,\n                });\n            case 'success':\n                return toast.success(message, {\n                    toastId: id,\n                });\n            case 'error':\n                return toast.error(message, {\n                    toastId: id,\n                });\n        }\n    };\n\n    useEffect(() => {\n        Object.keys(toastsRef.current).forEach((toastId) => {\n            const { key } = toastsRef.current[toastId];\n            const message = alertMessages[key][lang];\n\n            toast.update(toastId, {\n                render: message,\n                autoClose: 2000,\n            });\n        });\n    }, [lang]);\n\n    useEffect(() => {\n        toast.dismiss();\n    }, [pathname]);\n\n    return { showToast };\n};\n","import styled from 'styled-components';\n\nexport const SectionCardWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 0.5rem;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: var(--primary-white-color);\n    background: var(--primary-black-color);\n\n    @media (max-width: 480px) {\n        padding: 0.25rem 0.25rem 0.5rem 0.25rem;\n    }\n`;\n\nexport const SectionTitle = styled.div<{ $length: number }>`\n    font-weight: 500;\n    font-style: italic;\n    text-align: center;\n    font-family: var(--fancy-font);\n    font-size: var(--header-big);\n\n    @media (max-width: 480px) {\n        width: 100%;\n        font-size: var(--header-small);\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        font-size: 2.2rem;\n    }\n`;\n\nexport const ImageWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: url('/customAssets/border.svg') center no-repeat;\n    background-size: contain;\n    height: 100%;\n    width: 100%;\n    filter: drop-shadow(0px 0px 2.5px var(--primary-gold-color));\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        height: 90%;\n        width: 90%;\n    }\n`;\n\nexport const SectionImage = styled.div<{ $src: string }>`\n    background-size: contain;\n    width: 70%;\n    height: 70%;\n    background-position: center;\n    background-repeat: no-repeat;\n    filter: drop-shadow(0px 0px 1px var(--secondary-white-color));\n    background-image: ${({ $src }) => $src && `url(${$src})`};\n`;\n","import React from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../../hooks/useGlobalData';\n\n// Components\nimport CardWrapper from '../cardWrapper/CardWrapper';\n\n// Types\nimport { SectionCardProps } from './types/componentTypes';\n\n// Styled components\nimport {\n    SectionCardWrapper,\n    SectionImage,\n    SectionTitle,\n    ImageWrapper,\n} from './sectionCardStyles';\n\nconst SectionCard: React.FC<SectionCardProps> = ({ section }) => {\n    const { lang } = useGlobalData();\n\n    return (\n        <CardWrapper\n            page={section.link}\n            type={'long'}\n            disabled={section.disabled}\n        >\n            <SectionCardWrapper>\n                <ImageWrapper>\n                    <SectionImage $src={section?.cardImg[lang]} />\n                </ImageWrapper>\n                <SectionTitle $length={section?.cardTitle[lang].length}>\n                    {section?.cardTitle[lang]}\n                </SectionTitle>\n            </SectionCardWrapper>\n        </CardWrapper>\n    );\n};\n\nexport default SectionCard;\n","import styled from 'styled-components';\n\nexport const SectionBoxContainer = styled.div<{ $center: boolean }>`\n    gap: var(--long-card-gap);\n    padding: 0rem 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: ${({ $center }) =>\n        $center && $center ? 'space-between' : 'flex-start'};\n\n    @media (max-width: 480px) {\n        padding: 0rem;\n        gap: var(--long-card-gap);\n        justify-content: space-between;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        justify-content: space-between;\n    }\n`;\n","import React, { useEffect, useState } from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../hooks/useGlobalData';\nimport { useLocation } from 'react-router-dom';\nimport { useSetHeader } from '../../hooks/useSetHeader';\nimport { useToasts } from '../../hooks/useToasts';\n\n// Services\nimport { requestPage } from '../../services/request';\n\n// Components\nimport AppLayout from '../../AppLayout';\nimport SectionCard from '../../components/common/sectionCard/SectionCard';\nimport LandingPageFirstContainer from '../../components/common/pageWrapper/LandingPageFirstContainer';\nimport PageNotFound from '../../errorPages/pageNotFound/PageNotFound';\n\n// Types\nimport { ErrorResponse } from '../../appTypes';\nimport { SectionDetails } from '../../components/common/sectionCard/types/componentTypes';\n\n// Styled components\nimport { SectionBoxContainer } from './landingPageStyles';\n\nconst LandingPage: React.FC<{ page: string }> = ({ page }) => {\n    const { pathname } = useLocation();\n    const { showToast } = useToasts();\n    const { lang } = useGlobalData();\n    const [sections, setSections] = useState<SectionDetails[]>([]);\n    const [error, setError] = useState<number | null>(null);\n\n    const fetchData = async () => {\n        try {\n            const data = await requestPage(page);\n            setSections(data.sections);\n        } catch (error) {\n            const customError = error as ErrorResponse;\n\n            if (customError.status === 404) {\n                setError(404);\n            } else if (customError.status === 500) {\n                showToast('E_500', 'error', page);\n            }\n        }\n    };\n\n    // Set page title\n    useSetHeader(page, 'landing', sections);\n\n    useEffect(() => {\n        // Get data\n        fetchData();\n    }, [pathname]);\n\n    return (\n        <React.Fragment>\n            {error === 404 ? <PageNotFound /> : null}\n            <AppLayout>\n                <LandingPageFirstContainer>\n                    {sections.length > 0 ? (\n                        <SectionBoxContainer\n                            $center={sections.length % 3 === 0}\n                        >\n                            {sections?.map((section, i) => {\n                                return (\n                                    <SectionCard\n                                        key={section.cardTitle[lang]}\n                                        section={section}\n                                    />\n                                );\n                            })}\n                        </SectionBoxContainer>\n                    ) : null}\n                </LandingPageFirstContainer>\n            </AppLayout>\n        </React.Fragment>\n    );\n};\n\nexport default LandingPage;\n","export const storeVisit = (page: string) => {\n    const hasVisitedBefore = localStorage.getItem('th_Id');\n    let storageValue = null;\n\n    if (!hasVisitedBefore) {\n        storageValue = page + '_' + Math.random().toString(36).substring(2, 9);\n        localStorage.setItem('th_Id', storageValue);\n    } else {\n        storageValue = localStorage.getItem('th_Id');\n    }\n\n    return storageValue;\n};\n","import axios from 'axios';\n\n// Helper\nimport { storeVisit } from './storeVisit';\nimport { ValidEmailType } from '../components/poet/bookDialog/types/componentTypes';\n\n// API URL\nconst apiUrl = process.env.REACT_APP_BASE_URL;\n\nexport const requestPage = async (page: string) => {\n    if (!page) page = '';\n\n    try {\n        const userId = storeVisit(page);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: { page, userId },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestMiddlePage = async (page: string) => {\n    try {\n        const userId = storeVisit(page);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: { userId, page },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestAllWords = async (page: string, value: string) => {\n    try {\n        const userId = storeVisit(page);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: { userId, page, value },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestArticleInfo = async (id: string, page: string) => {\n    try {\n        const userId = storeVisit(`${page}${id}`);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: {\n                id: id,\n                page: `${page}/${id}`,\n                userId: userId,\n            },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestPdf = async (source: string) => {\n    try {\n        const response = await axios.get(`${apiUrl + source}`, {\n            responseType: 'arraybuffer',\n        });\n        const blob = new Blob([response.data], {\n            type: 'application/pdf',\n        });\n        const pdfBlobUrl = URL.createObjectURL(blob);\n        return pdfBlobUrl;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const addEmail = async (info: ValidEmailType) => {\n    try {\n        const response = await axios.post(`${apiUrl}/email`, { info });\n\n        return response;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// export const sendLogin = async (info) => {\n//     try {\n//         const response = await axios.post(`${apiUrl}/admin/login`, { info });\n\n//         return response;\n//     } catch (error) {\n//         throw error;\n//     }\n// };\n\nexport const getSections = async () => {\n    try {\n        const response = await axios.get(`${apiUrl}/${'admin/content'}`);\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// export const uploadSectionImage = async (formData) => {\n//     try {\n//         const response = await axios.put(`${apiUrl}/admin/section`, formData, {\n//             headers: {\n//                 'Content-Type': 'multipart/form-data',\n//             },\n//         });\n\n//         return response;\n//     } catch (error) {\n//         throw error;\n//     }\n// };\n"],"names":["slideOut","keyframes","StyledLink","styled","NavLink","_ref","$type","_ref2","_ref3","$disabled","css","_ref4","_ref5","_ref6","page","disabled","children","type","showToast","useToasts","_jsx","to","onClick","handleNoContent","LandingContainer","fadeIn","ArticleContainer","div","MainContainer","CodeWrapper","Code","ErrorMessage","PageNotFound","lang","useGlobalData","useSetHeader","AppLayout","_jsxs","alertMessages","PAGE_NOT_FOUND","pageData","title","setTitle","modifiedPage","substring","indexOf","link","length","useEffect","staticTexts","async","headerData","requestPage","tempHeader","updateLandingPageTitle","updatePageTitle","error","fetchHeaderData","header","key","typedKey","titleArr","newItem","toUpperCase","sections","forEach","section","sectionLink","cardTitle","sectionTitle","undefined","name","pathname","useLocation","toastsRef","useRef","Object","keys","current","toastId","message","toast","update","render","autoClose","dismiss","id","info","success","SectionCardWrapper","SectionTitle","ImageWrapper","SectionImage","$src","CardWrapper","cardImg","$length","SectionBoxContainer","$center","setSections","useState","setError","data","customError","status","fetchData","React","LandingPageFirstContainer","map","i","SectionCard","storeVisit","storageValue","localStorage","getItem","Math","random","toString","setItem","apiUrl","process","userId","axios","get","params","requestMiddlePage","requestAllWords","value","requestArticleInfo","requestPdf","response","source","responseType","blob","Blob","URL","createObjectURL","addEmail","post"],"sourceRoot":""}