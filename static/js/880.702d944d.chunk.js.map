{"version":3,"file":"static/js/880.702d944d.chunk.js","mappings":"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","sources":["components/common/cardWrapper/cardWrapperStyles.ts","components/common/cardWrapper/CardWrapper.tsx","components/common/pageWrapper/LandingPageFirstContainer.tsx","components/common/pageWrapper/pageWrapperStyles.ts","../node_modules/@mui/icons-material/esm/Search.js","components/common/searchBar/searchBarStyles.ts","components/common/squareCard/squareCardStyles.ts","components/common/squareCard/SquareCard.tsx","errorPages/pageNotFound/pageNotFoundStyles.ts","errorPages/pageNotFound/PageNotFound.tsx","hooks/useSetHeader.tsx","hooks/useToasts.tsx","components/poet/poetCard/poetCardStyles.ts","components/poet/poetCard/PoetCard.tsx","components/common/searchBar/SearchBar.tsx","middlePages/middlePage/MiddlePage.tsx","middlePages/middlePage/middlePageStyles.ts","services/storeVisit.ts","services/request.ts","../node_modules/@mui/icons-material/esm/Close.js"],"sourcesContent":["import styled, { css, keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n// Types\nimport { LinkProps } from './types/styleTypes';\n\nconst slideOut = keyframes`\n    0% {\n        transform: translateX(100%);\n        opacity: 0;\n    }\n    50% {\n        transform: translateX(0);\n        opacity: 1;\n    }\n    100% {\n        transform: translateX(0);\n        opacity: 1;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)<LinkProps>`\n    text-decoration: none;\n    border-radius: var(--small-radius);\n    animation: ${slideOut} 1s ease-in-out forwards;\n    transition: border-radius 250ms, box-shadow 400ms;\n    height: ${({ $type }) => ($type === 'long' ? '35rem' : '25rem')};\n    width: ${({ $type }) => ($type === 'long' ? '23rem' : '25rem')};\n\n    ${({ $disabled }) =>\n        $disabled\n            ? css`\n                  filter: brightness(0.5);\n                  cursor: default;\n\n                  &:hover {\n                      border-radius: initial;\n                      box-shadow: initial;\n                  }\n\n                  > * {\n                      border-radius: var(--small-radius);\n                  }\n              `\n            : css`\n                  pointer-events: all;\n                  filter: brightness(1);\n                  cursor: pointer;\n\n                  &:hover {\n                      border-radius: var(--big-radius);\n                      box-shadow: var(--primary-box-shadow)\n                          var(--primary-shadow-color);\n                  }\n\n                  > * {\n                      border-radius: var(--small-radius);\n                      transition: border-radius 250ms;\n\n                      &:hover {\n                          border-radius: var(--big-radius);\n                      }\n                  }\n              `}\n\n    @media (max-width: 480px) {\n        box-shadow: var(--primary-box-shadow) var(--primary-shadow-color);\n        height: ${({ $type }) => ($type === 'long' ? '16rem' : '16rem')};\n        width: ${({ $type }) => ($type === 'long' ? '10.3rem' : '16rem')};\n\n        &:hover {\n            border-radius: var(--small-radius);\n            transition: initial;\n\n            > * {\n                border-radius: var(--small-radius);\n\n                &:hover {\n                    border-radius: var(--small-radius);\n                }\n            }\n        }\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        box-shadow: var(--primary-box-shadow) var(--primary-shadow-color);\n        width: 25rem;\n        ${({ $type }) =>\n            $type === 'long'\n                ? css`\n                      border-radius: var(--big-radius);\n                      height: 35rem;\n\n                      > * {\n                          border-radius: var(--big-radius);\n                      }\n                  `\n                : css`\n                      border-radius: var(--small-radius);\n                      height: 25rem;\n\n                      > * {\n                          border-radius: var(--small-radius);\n                      }\n                  `}\n    }\n`;\n","import React from 'react';\n\n// Types\nimport { CardWrapperProps } from './types/componentTypes';\n\n// Styled components\nimport { StyledLink } from './cardWrapperStyles';\nimport { useToasts } from '../../../hooks/useToasts';\n\nconst CardWrapper: React.FC<CardWrapperProps> = ({\n    page,\n    disabled = false,\n    children,\n    type,\n}) => {\n    const { showToast } = useToasts();\n\n    const handleNoContent = () => {\n        if (disabled) {\n            showToast('ARTICLE_UNAVAILABLE', 'info', page);\n        }\n    };\n\n    return (\n        <StyledLink\n            $type={type}\n            $disabled={disabled}\n            to={disabled ? '#' : page}\n            onClick={handleNoContent}\n        >\n            {children}\n        </StyledLink>\n    );\n};\n\nexport default CardWrapper;\n","import React, { ReactNode } from 'react';\n\n//Styled components\nimport { LandingContainer } from './pageWrapperStyles';\n\nconst LandingPageFirstContainer: React.FC<{ children: ReactNode }> = ({\n    children,\n}) => {\n    return <LandingContainer>{children}</LandingContainer>;\n};\n\nexport default LandingPageFirstContainer;\n","import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n    0% {\n        opacity: 0;\n    }\n    50% {\n        opacity: 1;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\n// Article page *************************\nexport const ArticleContainer = styled.div`\n    position: relative;\n    box-sizing: border-box;\n    background-color: var(--regular-white-color);\n    padding: 2rem var(--page-padding) 4rem var(--page-padding);\n    animation: ${fadeIn} 1s ease-in-out forwards;\n    overflow-x: hidden;\n    min-height: 100svh;\n\n    @media (max-width: 480px) {\n        padding: 0rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        padding: var(--page-padding);\n    }\n`;\n\n// Landing page *************************\nexport const LandingContainer = styled.div`\n    box-sizing: border-box;\n    padding: 2rem var(--page-padding) 4rem var(--page-padding);\n    background: var(--regular-white-color);\n    animation: ${fadeIn} 1s ease-in-out forwards;\n    overflow-x: hidden;\n    min-height: 100svh;\n\n    @media (max-width: 480px) {\n        padding: var(--page-padding) var(--page-padding)\n            calc(4 * var(--page-padding)) var(--page-padding);\n    }\n`;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import styled from 'styled-components';\nimport { Search, Close } from '@mui/icons-material';\nimport { IconButton } from '@mui/material';\n\nexport const SearchContainer = styled.div`\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    height: 7rem;\n\n    @media (max-width: 480px) {\n        height: 5.5rem;\n    }\n`;\n\nexport const InputWrapper = styled.div`\n    height: 3.5rem;\n    width: 30rem;\n    background: url('/customAssets/search.png') center no-repeat;\n    background-size: contain;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n\n    @media (max-width: 480px) {\n        width: 100%;\n        height: 3rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        width: 35rem;\n        height: 4rem;\n    }\n`;\n\nexport const InputField = styled.input`\n    outline: none;\n    border: none;\n    width: 24.5rem;\n    margin-left: 1.5rem;\n    padding-left: 0.45rem;\n    height: 3.4rem;\n    font-size: var(--header-small);\n    background-color: transparent;\n    font-family: var(--regular-font);\n\n    &::placeholder {\n        color: var(--secondary-grey-color);\n    }\n\n    @media (max-width: 480px) {\n        font-size: var(--body-text);\n        height: 100%;\n        margin: 0rem 1.25rem;\n        padding-left: 2.15rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        margin: 0rem 2.25rem;\n        font-size: 1.35rem;\n        width: 26rem;\n    }\n`;\n\nexport const StyledSearchIcon = styled(Search)`\n    color: var(--secondary-grey-color);\n    position: absolute;\n    left: 1.75rem;\n\n    &.MuiSvgIcon-root {\n        width: 1.8rem;\n        height: 1.8rem;\n    }\n\n    @media (max-width: 480px) {\n        left: 1.5rem;\n\n        &.MuiSvgIcon-root {\n            width: 1.75rem;\n            height: 1.75rem;\n        }\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        left: 2rem;\n\n        &.MuiSvgIcon-root {\n            width: 2.5rem;\n            height: 2.5rem;\n        }\n    }\n`;\n\nexport const StyledClearIcon = styled(Close)`\n    color: var(--secondary-grey-color);\n\n    &.MuiSvgIcon-root {\n        width: 1.8rem;\n        height: 1.8rem;\n    }\n\n    @media (max-width: 480px) {\n        &.MuiSvgIcon-root {\n            width: 1.75rem;\n            height: 1.75rem;\n        }\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        &.MuiSvgIcon-root {\n            width: 2.5rem;\n            height: 2.5rem;\n        }\n    }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n    width: 2.5rem;\n    height: 2.5rem;\n\n    &.MuiIconButton-root {\n        position: absolute;\n        right: 1.75rem;\n    }\n\n    @media (max-width: 480px) {\n        &.MuiIconButton-root {\n            position: absolute;\n            right: 1.05rem;\n        }\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        width: 3.5rem;\n        height: 3.5rem;\n    }\n`;\n\nexport const InputAlert = styled.div`\n    margin-top: 0.5rem;\n    color: var(--primary-red-color);\n    font-size: var(--body-text);\n\n    @media (max-width: 480px) {\n        margin-top: 0.25rem;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const SquareImage = styled.img`\n    height: 100%;\n    width: 100%;\n`;\n","import React from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../../hooks/useGlobalData';\n\n// Components\nimport CardWrapper from '../cardWrapper/CardWrapper';\n\n// Types\nimport { CardType } from '../../../middlePages/middlePage/types/componentTypes';\n\n// Styled components\nimport { SquareImage } from './squareCardStyles';\n\nconst SquareCard: React.FC<{ data: CardType }> = ({ data }) => {\n    const { lang } = useGlobalData();\n\n    return (\n        <CardWrapper disabled={data.disabled} page={data?.id} type={'square'}>\n            <SquareImage\n                src={process.env.REACT_APP_BASE_URL + data?.cardImg[lang]}\n            />\n        </CardWrapper>\n    );\n};\n\nexport default SquareCard;\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n    width: 100%;\n    height: calc(100svh - var(--header-height));\n    background-image: url('/customAssets/error-grid-1.png');\n    background-size: calc(100vw / 4);\n    background-repeat: repeat;\n    background-position: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media (max-width: 480px) {\n        background-size: 100vw;\n    }\n`;\n\nexport const CodeWrapper = styled.div`\n    height: 15rem;\n    width: 25rem;\n    border-radius: var(--small-radius);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--regular-black-color);\n    box-shadow: var(--primary-box-shadow) var(--primary-white-color);\n\n    @media (max-width: 480px) {\n        height: 10rem;\n        width: 20rem;\n    }\n`;\n\nexport const Code = styled.div`\n    font-size: 5rem;\n    font-family: var(--blocky-font);\n    color: var(--primary-red-color);\n\n    @media (max-width: 480px) {\n        font-size: var(--header-large);\n    }\n`;\n\nexport const ErrorMessage = styled.div`\n    font-size: 1.5rem;\n    font-family: var(--fancy-font);\n    color: var(--primary-white-color);\n\n    @media (max-width: 480px) {\n        font-size: var(--header-normal);\n    }\n`;\n","import React from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../hooks/useGlobalData';\nimport { useSetHeader } from '../../hooks/useSetHeader';\n\n// Helper\nimport alertMessages from '../../miscellaneous/alertMessages.json';\n\n// Components\nimport AppLayout from '../../AppLayout';\n\n// Styled components\nimport {\n    MainContainer,\n    CodeWrapper,\n    Code,\n    ErrorMessage,\n} from './pageNotFoundStyles';\n\nconst PageNotFound: React.FC = () => {\n    const { lang } = useGlobalData();\n\n    useSetHeader('reset');\n\n    return (\n        <AppLayout>\n            <MainContainer>\n                <CodeWrapper>\n                    <Code>404</Code>\n                    <ErrorMessage>\n                        {alertMessages.PAGE_NOT_FOUND[lang]}\n                    </ErrorMessage>\n                </CodeWrapper>\n            </MainContainer>\n        </AppLayout>\n    );\n};\n\nexport default PageNotFound;\n","import React, { useEffect } from 'react';\n\n// Hooks\nimport { useGlobalData } from './useGlobalData';\n\n// Services\nimport { requestPage } from '../services/request';\n\n// Helper\nimport staticTexts from '../miscellaneous/staticTexts.json';\n\n// Types\nimport { Langs } from '../appTypes';\nimport { HeaderDataType, Section, TitleProps } from './hookTypes';\n\nexport const useSetHeader = (page: string, type?: string, pageData?: any) => {\n    const { title, setTitle } = useGlobalData();\n\n    const modifiedPage =\n        type === 'landing' ? page : page.substring(0, page.indexOf('/'));\n\n    const link =\n        type === 'middle'\n            ? page.substring(page.indexOf('_') + 1)\n            : page.substring(page.indexOf('/') + 1, page.length - 1);\n\n    useEffect(() => {\n        const fetchHeaderData = async () => {\n            try {\n                const headerData = await requestPage(modifiedPage);\n\n                let tempHeader = { ...title };\n\n                if (type === 'landing') {\n                    updateLandingPageTitle(tempHeader, headerData);\n                } else {\n                    updatePageTitle(tempHeader, headerData);\n                }\n\n                setTitle(tempHeader);\n            } catch (error: unknown) {\n                setTitle(staticTexts.HEADER);\n            }\n        };\n\n        if (page === 'reset') {\n            setTitle(staticTexts.HEADER);\n        } else {\n            fetchHeaderData();\n        }\n    }, [page, pageData]);\n\n    const updateLandingPageTitle = (\n        tempHeader: TitleProps,\n        headerData: HeaderDataType,\n    ) => {\n        const { header } = headerData;\n\n        for (const key in title) {\n            const typedKey = key as Langs;\n            let titleArr = [...title[typedKey]];\n\n            // New title\n            const newItem = [`${header[typedKey].toUpperCase()}`, ''];\n\n            titleArr[1] = newItem;\n\n            tempHeader[typedKey] = titleArr;\n        }\n    };\n\n    const updatePageTitle = (\n        tempHeader: TitleProps,\n        headerData: HeaderDataType,\n    ) => {\n        const { header, sections } = headerData;\n\n        sections?.forEach((section: Section) => {\n            const { link: sectionLink, cardTitle: sectionTitle } = section;\n\n            if (sectionLink === link) {\n                for (const key in title) {\n                    const typedKey = key as Langs;\n\n                    let titleArr = [...title[typedKey]];\n                    let newItem = [];\n\n                    if (type === 'middle') {\n                        newItem = [\n                            `${header[typedKey].toUpperCase()}`,\n                            `${\n                                sectionTitle[typedKey] !== undefined\n                                    ? sectionTitle[typedKey]\n                                    : ''\n                            }`,\n                        ];\n                    } else {\n                        newItem = [\n                            `${sectionTitle[typedKey].toUpperCase()}`,\n                            `${\n                                pageData?.name[typedKey] !== undefined\n                                    ? pageData?.name[typedKey]\n                                    : ''\n                            }`,\n                        ];\n                    }\n\n                    titleArr[1] = newItem;\n                    tempHeader[typedKey] = titleArr;\n                }\n            }\n        });\n    };\n};\n","import React, { useEffect, useRef } from 'react';\nimport { toast } from 'react-toastify';\n\n// Hooks\nimport { useGlobalData } from './useGlobalData';\n\n// Static messgaes\nimport alertMessages from '../miscellaneous/alertMessages.json';\n\n// Types\nimport { ToastTypes } from './hookTypes';\nimport { useLocation } from 'react-router-dom';\ntype AlertMessageKey = keyof typeof alertMessages;\n\nexport const useToasts = () => {\n    const { lang } = useGlobalData();\n    const { pathname } = useLocation();\n    const toastsRef = useRef<{\n        [id: string]: { key: AlertMessageKey };\n    }>({});\n\n    const showToast = (key: AlertMessageKey, type: ToastTypes, id: string) => {\n        const message = alertMessages[key][lang];\n\n        toastsRef.current[id] = { key };\n\n        switch (type) {\n            case 'info':\n                return toast.info(message, {\n                    toastId: id,\n                });\n            case 'success':\n                return toast.success(message, {\n                    toastId: id,\n                });\n            case 'error':\n                return toast.error(message, {\n                    toastId: id,\n                });\n        }\n    };\n\n    useEffect(() => {\n        Object.keys(toastsRef.current).forEach((toastId) => {\n            const { key } = toastsRef.current[toastId];\n            const message = alertMessages[key][lang];\n\n            toast.update(toastId, {\n                render: message,\n                autoClose: 2000,\n            });\n        });\n    }, [lang]);\n\n    useEffect(() => {\n        toast.dismiss();\n    }, [pathname]);\n\n    return { showToast };\n};\n","import styled from 'styled-components';\n\nexport const PoetCardContent = styled.div`\n    width: 100%;\n    height: 100%;\n    color: var(--primary-white-color);\n    background: var(--primary-black-color);\n    position: relative;\n    padding: 2rem;\n\n    @media (max-width: 480px) {\n        padding: 1rem 0.5rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        padding: 1.5rem;\n    }\n`;\n\nexport const PoetImgContainer = styled.div`\n    height: 20rem;\n    width: 15rem;\n    border-radius: 9rem;\n    border: 2px solid var(--primary-gold-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    box-shadow: 0rem 0rem 3rem var(--primary-shadow-color);\n\n    @media (max-width: 480px) {\n        height: 10.8rem;\n        width: 8.25rem;\n        border-radius: 4rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        height: 23.5rem;\n        width: 17.5rem;\n    }\n`;\n\nexport const PoetImage = styled.img`\n    border-radius: 9rem;\n    height: 18.5rem;\n    width: 13.5rem;\n    margin: 0.3rem;\n    box-shadow: var(--primary-box-shadow) var(--primary-gold-color);\n    background: var(--primary-black-color) url('/customAssets/loader.png')\n        center no-repeat;\n    background-size: 50% auto;\n\n    @media (max-width: 480px) {\n        height: 10.05rem;\n        width: 7.5rem;\n        border-radius: 4.25rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        height: 22rem;\n        width: 16rem;\n    }\n`;\n\nexport const PoetNameBox = styled.div`\n    position: absolute;\n    top: 17.5rem;\n    left: 2rem;\n\n    @media (max-width: 480px) {\n        top: 9.5rem;\n        left: 1rem;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        top: 17rem;\n        left: 1.5rem;\n    }\n`;\n\nexport const PoetName = styled.div`\n    font-size: var(--header-large);\n    line-height: var(--header-large);\n    font-style: italic;\n    font-family: var(--fancy-font);\n    text-shadow: 0rem 0rem 0.25rem black;\n\n    @media (max-width: 480px) {\n        font-size: var(--header-medium);\n        line-height: var(--header-medium);\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        font-size: 3rem;\n    }\n`;\n\nexport const PoetDates = styled.div`\n    font-size: var(--header-small);\n    font-family: var(--regular-font);\n    padding-top: calc(var(--text-segment-gap) / 2);\n\n    @media (max-width: 480px) {\n        font-size: var(--body-text);\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        font-size: 1.5rem;\n        margin-top: 0.5rem;\n    }\n`;\n\nexport const PoetInfoContainer = styled.div`\n    position: absolute;\n    padding: 0rem 2rem 2rem 2rem;\n    left: 0rem;\n    bottom: 0rem;\n    width: 100%;\n    color: var(--secondary-white-color);\n    font-size: var(--body-text);\n\n    @media (max-width: 480px) {\n        display: none;\n    }\n\n    @media screen and (min-device-width: 481px) and (max-device-width: 1024px) {\n        font-size: 1.15rem;\n        max-height: 8.75rem;\n        max-width: 25rem;\n        height: 8.75rem;\n        padding: 0rem 1.5rem 1.5rem 1.5rem;\n        overflow: hidden;\n    }\n`;\n","import React from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../../hooks/useGlobalData';\n\n// Components\nimport CardWrapper from '../../common/cardWrapper/CardWrapper';\n\n// Types\nimport { PoetCardType } from './types/componentTypes';\n\n// Styled components\nimport {\n    PoetCardContent,\n    PoetImgContainer,\n    PoetImage,\n    PoetNameBox,\n    PoetName,\n    PoetDates,\n    PoetInfoContainer,\n} from './poetCardStyles';\n\nconst PoetCard: React.FC<{ poet: PoetCardType }> = ({ poet }) => {\n    const { lang } = useGlobalData();\n    const poetName = poet?.name[lang].split(' ');\n\n    return (\n        <CardWrapper type={'long'} disabled={poet.disabled} page={poet?.id}>\n            <PoetCardContent>\n                <PoetImgContainer>\n                    <PoetImage\n                        src={process.env.REACT_APP_BASE_URL + poet?.img}\n                    />\n                </PoetImgContainer>\n                <PoetNameBox>\n                    <PoetName>{poetName[0]}</PoetName>\n                    <PoetName>{poetName[1]}</PoetName>\n                    <PoetDates>\n                        {poet?.years[0]}-{poet?.years[1]}\n                    </PoetDates>\n                </PoetNameBox>\n                <PoetInfoContainer\n                    dangerouslySetInnerHTML={{\n                        __html: poet?.desc[lang],\n                    }}\n                />\n            </PoetCardContent>\n        </CardWrapper>\n    );\n};\n\nexport default PoetCard;\n","import React, { useState, useRef, useCallback } from 'react';\n\n// Hooks\nimport { useGlobalData } from '../../../hooks/useGlobalData';\n\n// Helper\nimport alertMessages from '../../../miscellaneous/alertMessages.json';\nimport staticTexts from '../../../miscellaneous/staticTexts.json';\n\n// Types\nimport { EntryDetails, SearchBarProps } from './types/componentTypes';\n\n// Styled components\nimport {\n    SearchContainer,\n    InputWrapper,\n    InputField,\n    StyledSearchIcon,\n    StyledClearIcon,\n    InputAlert,\n    StyledIconButton,\n} from './searchBarStyles';\n\nconst SearchBar: React.FC<SearchBarProps> = ({ items, setItems, allItems }) => {\n    const { lang } = useGlobalData();\n    const [noMatch, setNoMatch] = useState<boolean>(false);\n    const [value, setValue] = useState<string>('');\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const handleSearch = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            setNoMatch(false);\n            const enteredValue = e.currentTarget.value;\n\n            if (enteredValue.length > 0) {\n                const lowerEnteredValue = enteredValue.toLowerCase();\n                const filtered = items?.filter((entry: EntryDetails) =>\n                    entry?.tags?.some((tag: string) => {\n                        const lowerTagValue = tag.toLowerCase();\n                        return (\n                            lowerTagValue.includes(lowerEnteredValue) ||\n                            lowerEnteredValue.includes(lowerTagValue)\n                        );\n                    }),\n                );\n\n                if (filtered.length > 0) {\n                    setItems(filtered);\n                    setNoMatch(false);\n                } else {\n                    setNoMatch(true);\n                    setItems(allItems);\n                }\n            } else {\n                setItems(allItems);\n            }\n\n            setValue(enteredValue);\n        },\n        [],\n    );\n\n    const handleClear = useCallback(() => {\n        setValue('');\n        setNoMatch(false);\n        setItems(allItems);\n\n        if (inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [allItems, setItems]);\n\n    return (\n        <SearchContainer>\n            <InputWrapper>\n                <StyledSearchIcon />\n                <InputField\n                    name=\"search_bar\"\n                    id=\"search_bar\"\n                    ref={inputRef}\n                    placeholder={staticTexts.SEARCH_BAR_PLACEHOLDER[lang]}\n                    value={value}\n                    onChange={(e) => handleSearch(e)}\n                />\n                {value.length ? (\n                    <StyledIconButton onClick={handleClear}>\n                        <StyledClearIcon />\n                    </StyledIconButton>\n                ) : null}\n            </InputWrapper>\n            {noMatch && (\n                <InputAlert>{alertMessages.SEARCH_NOT_FOUND[lang]}</InputAlert>\n            )}\n        </SearchContainer>\n    );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\n\n// Hooks\nimport { useLocation } from 'react-router-dom';\nimport { useSetHeader } from '../../hooks/useSetHeader';\nimport { useToasts } from '../../hooks/useToasts';\n\n// Services\nimport { requestMiddlePage } from '../../services/request';\n\n// Components\nimport AppLayout from '../../AppLayout';\nimport PoetCard from '../../components/poet/poetCard/PoetCard';\nimport SquareCard from '../../components/common/squareCard/SquareCard';\nimport SearchBar from '../../components/common/searchBar/SearchBar';\nimport LandingPageFirstContainer from '../../components/common/pageWrapper/LandingPageFirstContainer';\nimport PageNotFound from '../../errorPages/pageNotFound/PageNotFound';\n\n// Types\nimport { CardType } from './types/componentTypes';\nimport { ErrorResponse } from '../../appTypes';\n\n// Styled components\nimport { InnerBoxContainer } from './middlePageStyles';\n\nconst MiddlePage: React.FC<{ page: string }> = ({ page }) => {\n    const { pathname } = useLocation();\n    const { showToast } = useToasts();\n    const [items, setItems] = useState<CardType[]>([]);\n    const [allItems, setAllItems] = useState<CardType[]>([]);\n    const [error, setError] = useState<number | null>(null);\n\n    const fetchData = async () => {\n        try {\n            const data = await requestMiddlePage(page);\n\n            setItems(data);\n            setAllItems(data);\n        } catch (error: unknown) {\n            const customError = error as ErrorResponse;\n\n            if (customError.status === 404) {\n                setError(404);\n            } else if (customError.status === 500) {\n                showToast('E_500', 'error', page);\n            }\n        }\n    };\n\n    // Set a title\n    useSetHeader(page, 'middle');\n\n    useEffect(() => {\n        // Get data\n        fetchData();\n    }, [pathname]);\n\n    return (\n        <React.Fragment>\n            {error === 404 ? <PageNotFound /> : null}\n            <AppLayout>\n                <LandingPageFirstContainer>\n                    {items.length > 0 ? (\n                        <React.Fragment>\n                            <SearchBar\n                                items={items}\n                                setItems={setItems}\n                                allItems={allItems}\n                            />\n                            <InnerBoxContainer $center={items.length % 3 === 0}>\n                                {items.map((item, i) =>\n                                    page.includes('poets') ? (\n                                        <PoetCard key={item.id} poet={item} />\n                                    ) : (\n                                        <SquareCard key={item.id} data={item} />\n                                    ),\n                                )}\n                            </InnerBoxContainer>\n                        </React.Fragment>\n                    ) : null}\n                </LandingPageFirstContainer>\n            </AppLayout>\n        </React.Fragment>\n    );\n};\n\nexport default MiddlePage;\n","import styled from 'styled-components';\n\nexport const InnerBoxContainer = styled.div<{ $center: boolean }>`\n    gap: var(--square-card-gap);\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    min-height: var(--page-height);\n`;\n","export const storeVisit = (page: string) => {\n    const hasVisitedBefore = localStorage.getItem('th_Id');\n    let storageValue = null;\n\n    if (!hasVisitedBefore) {\n        storageValue = page + '_' + Math.random().toString(36).substring(2, 9);\n        localStorage.setItem('th_Id', storageValue);\n    } else {\n        storageValue = localStorage.getItem('th_Id');\n    }\n\n    return storageValue;\n};\n","import axios from 'axios';\n\n// Helper\nimport { storeVisit } from './storeVisit';\nimport { ValidEmailType } from '../components/poet/bookDialog/types/componentTypes';\n\n// API URL\nconst apiUrl = process.env.REACT_APP_BASE_URL;\n\nexport const requestPage = async (page: string) => {\n    if (!page) page = '';\n\n    try {\n        const userId = storeVisit(page);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: { page, userId },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestMiddlePage = async (page: string) => {\n    try {\n        const userId = storeVisit(page);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: { userId, page },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestArticleInfo = async (id: string, page: string) => {\n    try {\n        const userId = storeVisit(`${page}${id}`);\n\n        const response = await axios.get(`${apiUrl}/${page}`, {\n            params: {\n                id: id,\n                page: `${page}/${id}`,\n                userId: userId,\n            },\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const requestPdf = async (source: string) => {\n    try {\n        const response = await axios.get(`${apiUrl + source}`, {\n            responseType: 'arraybuffer',\n        });\n        const blob = new Blob([response.data], {\n            type: 'application/pdf',\n        });\n        const pdfBlobUrl = URL.createObjectURL(blob);\n        return pdfBlobUrl;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport const addEmail = async (info: ValidEmailType) => {\n    try {\n        const response = await axios.post(`${apiUrl}/email`, { info });\n\n        return response;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// export const sendLogin = async (info) => {\n//     try {\n//         const response = await axios.post(`${apiUrl}/admin/login`, { info });\n\n//         return response;\n//     } catch (error) {\n//         throw error;\n//     }\n// };\n\nexport const getSections = async () => {\n    try {\n        const response = await axios.get(`${apiUrl}/${'admin/content'}`);\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\n// export const uploadSectionImage = async (formData) => {\n//     try {\n//         const response = await axios.put(`${apiUrl}/admin/section`, formData, {\n//             headers: {\n//                 'Content-Type': 'multipart/form-data',\n//             },\n//         });\n\n//         return response;\n//     } catch (error) {\n//         throw error;\n//     }\n// };\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["slideOut","keyframes","StyledLink","styled","NavLink","_ref","$type","_ref2","_ref3","$disabled","css","_ref4","_ref5","_ref6","page","disabled","children","type","showToast","useToasts","_jsx","to","onClick","handleNoContent","LandingContainer","fadeIn","ArticleContainer","div","createSvgIcon","d","SearchContainer","InputWrapper","InputField","input","StyledSearchIcon","Search","StyledClearIcon","Close","StyledIconButton","IconButton","InputAlert","SquareImage","img","data","lang","useGlobalData","CardWrapper","id","src","process","cardImg","MainContainer","CodeWrapper","Code","ErrorMessage","PageNotFound","useSetHeader","AppLayout","_jsxs","alertMessages","PAGE_NOT_FOUND","pageData","title","setTitle","modifiedPage","substring","indexOf","link","length","useEffect","staticTexts","async","headerData","requestPage","tempHeader","updateLandingPageTitle","updatePageTitle","error","fetchHeaderData","header","key","typedKey","titleArr","newItem","toUpperCase","sections","forEach","section","sectionLink","cardTitle","sectionTitle","undefined","name","pathname","useLocation","toastsRef","useRef","Object","keys","current","toastId","message","toast","update","render","autoClose","dismiss","info","success","PoetCardContent","PoetImgContainer","PoetImage","PoetNameBox","PoetName","PoetDates","PoetInfoContainer","poet","poetName","split","years","dangerouslySetInnerHTML","__html","desc","items","setItems","allItems","noMatch","setNoMatch","useState","value","setValue","inputRef","handleSearch","useCallback","e","enteredValue","currentTarget","lowerEnteredValue","toLowerCase","filtered","filter","entry","_entry$tags","tags","some","tag","lowerTagValue","includes","handleClear","focus","ref","placeholder","onChange","SEARCH_NOT_FOUND","setAllItems","setError","requestMiddlePage","customError","status","fetchData","React","LandingPageFirstContainer","SearchBar","InnerBoxContainer","$center","map","item","i","PoetCard","SquareCard","storeVisit","storageValue","localStorage","getItem","Math","random","toString","setItem","apiUrl","userId","axios","get","params","requestArticleInfo","requestPdf","response","source","responseType","blob","Blob","URL","createObjectURL","addEmail","post"],"sourceRoot":""}