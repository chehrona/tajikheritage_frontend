{"ast":null,"code":"import React from\"react\";import{useSetLang}from\"../../../App\";import{AllergyContainer,BoxTitle,LabelWrapper,LabelContainer,LabelImage,AllergenName,ContentBox}from\"./allergyStyles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Allergy(_ref){var _recipe$contains;let{recipe}=_ref;const{lang}=useSetLang();return/*#__PURE__*/_jsxs(AllergyContainer,{children:[recipe.contains&&/*#__PURE__*/_jsxs(ContentBox,{children:[/*#__PURE__*/_jsx(BoxTitle,{children:lang===\"us\"?\"Contains\":lang===\"ru\"?\"Содержит\":\"Дорад\"}),/*#__PURE__*/_jsx(LabelWrapper,{children:recipe===null||recipe===void 0?void 0:(_recipe$contains=recipe.contains)===null||_recipe$contains===void 0?void 0:_recipe$contains.map((label,i)=>{return/*#__PURE__*/_jsxs(LabelContainer,{children:[/*#__PURE__*/_jsx(LabelImage,{src:\"/allergyLabels/\".concat(label,\".png\")}),/*#__PURE__*/_jsx(AllergenName,{children:recipe===null||recipe===void 0?void 0:recipe.labels[i][lang]})]},i);})})]}),recipe.diet&&/*#__PURE__*/_jsxs(ContentBox,{children:[/*#__PURE__*/_jsx(BoxTitle,{children:lang===\"us\"?\"Diet\":lang===\"ru\"?\"Диета\":\"Парҳез\"}),/*#__PURE__*/_jsx(LabelWrapper,{children:recipe===null||recipe===void 0?void 0:recipe.diet.map((label,i)=>{return/*#__PURE__*/_jsxs(LabelContainer,{children:[/*#__PURE__*/_jsx(LabelImage,{src:\"/allergyLabels/\".concat(label,\".png\")}),/*#__PURE__*/_jsx(AllergenName,{children:recipe===null||recipe===void 0?void 0:recipe.dietLabels[i][lang]})]},i);})})]})]});}","map":{"version":3,"names":["React","useSetLang","AllergyContainer","BoxTitle","LabelWrapper","LabelContainer","LabelImage","AllergenName","ContentBox","jsx","_jsx","jsxs","_jsxs","Allergy","_ref","_recipe$contains","recipe","lang","children","contains","map","label","i","src","concat","labels","diet","dietLabels"],"sources":["/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/components/food/allergy/Allergy.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSetLang } from \"../../../App\";\n\nimport {\n    AllergyContainer,\n    BoxTitle,\n    LabelWrapper,\n    LabelContainer,\n    LabelImage,\n    AllergenName,\n    ContentBox,\n} from \"./allergyStyles\"\n\nexport default function Allergy({ recipe }) {\n    const { lang } = useSetLang();\n    \n    return (\n        <AllergyContainer>\n            {recipe.contains && \n                <ContentBox>\n                    <BoxTitle>{lang === \"us\" ? \"Contains\" : (lang === \"ru\" ? \"Содержит\" : \"Дорад\")}</BoxTitle>\n                    <LabelWrapper>\n                        {recipe?.contains?.map((label, i) => {\n                            return (\n                                <LabelContainer key={i}>\n                                    <LabelImage src={`/allergyLabels/${label}.png`} />\n                                    <AllergenName>\n                                        {recipe?.labels[i][lang]}\n                                    </AllergenName>\n                                </LabelContainer>\n                            )\n                        })}\n                    </LabelWrapper>\n                </ContentBox>\n            }\n            {recipe.diet && \n                <ContentBox>\n                    <BoxTitle>{lang === \"us\" ? \"Diet\" : (lang === \"ru\" ? \"Диета\" : \"Парҳез\")}</BoxTitle>\n                    <LabelWrapper>\n                        {recipe?.diet.map((label, i) => {\n                            return (\n                                <LabelContainer key={i}>\n                                    <LabelImage src={`/allergyLabels/${label}.png`} />\n                                    <AllergenName>\n                                        {recipe?.dietLabels[i][lang]}\n                                    </AllergenName>\n                                </LabelContainer>\n                            )\n                        })}\n                    </LabelWrapper>\n                </ContentBox>\n            }\n        </AllergyContainer>\n    )\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,cAAc,CAEzC,OACIC,gBAAgB,CAChBC,QAAQ,CACRC,YAAY,CACZC,cAAc,CACdC,UAAU,CACVC,YAAY,CACZC,UAAU,KACP,iBAAiB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExB,cAAe,SAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAa,KAAAC,gBAAA,IAAZ,CAAEC,MAAO,CAAC,CAAAF,IAAA,CACtC,KAAM,CAAEG,IAAK,CAAC,CAAGhB,UAAU,CAAC,CAAC,CAE7B,mBACIW,KAAA,CAACV,gBAAgB,EAAAgB,QAAA,EACZF,MAAM,CAACG,QAAQ,eACZP,KAAA,CAACJ,UAAU,EAAAU,QAAA,eACPR,IAAA,CAACP,QAAQ,EAAAe,QAAA,CAAED,IAAI,GAAK,IAAI,CAAG,UAAU,CAAIA,IAAI,GAAK,IAAI,CAAG,UAAU,CAAG,OAAQ,CAAW,CAAC,cAC1FP,IAAA,CAACN,YAAY,EAAAc,QAAA,CACRF,MAAM,SAANA,MAAM,kBAAAD,gBAAA,CAANC,MAAM,CAAEG,QAAQ,UAAAJ,gBAAA,iBAAhBA,gBAAA,CAAkBK,GAAG,CAAC,CAACC,KAAK,CAAEC,CAAC,GAAK,CACjC,mBACIV,KAAA,CAACP,cAAc,EAAAa,QAAA,eACXR,IAAA,CAACJ,UAAU,EAACiB,GAAG,mBAAAC,MAAA,CAAoBH,KAAK,QAAO,CAAE,CAAC,cAClDX,IAAA,CAACH,YAAY,EAAAW,QAAA,CACRF,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAES,MAAM,CAACH,CAAC,CAAC,CAACL,IAAI,CAAC,CACd,CAAC,GAJEK,CAKL,CAAC,CAEzB,CAAC,CAAC,CACQ,CAAC,EACP,CAAC,CAEhBN,MAAM,CAACU,IAAI,eACRd,KAAA,CAACJ,UAAU,EAAAU,QAAA,eACPR,IAAA,CAACP,QAAQ,EAAAe,QAAA,CAAED,IAAI,GAAK,IAAI,CAAG,MAAM,CAAIA,IAAI,GAAK,IAAI,CAAG,OAAO,CAAG,QAAS,CAAW,CAAC,cACpFP,IAAA,CAACN,YAAY,EAAAc,QAAA,CACRF,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEU,IAAI,CAACN,GAAG,CAAC,CAACC,KAAK,CAAEC,CAAC,GAAK,CAC5B,mBACIV,KAAA,CAACP,cAAc,EAAAa,QAAA,eACXR,IAAA,CAACJ,UAAU,EAACiB,GAAG,mBAAAC,MAAA,CAAoBH,KAAK,QAAO,CAAE,CAAC,cAClDX,IAAA,CAACH,YAAY,EAAAW,QAAA,CACRF,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEW,UAAU,CAACL,CAAC,CAAC,CAACL,IAAI,CAAC,CAClB,CAAC,GAJEK,CAKL,CAAC,CAEzB,CAAC,CAAC,CACQ,CAAC,EACP,CAAC,EAEH,CAAC,CAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}