{"ast":null,"code":"var _jsxFileName = \"/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/components/food/allergy/Allergy.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSetLang } from \"../../../App\";\nimport { AllergyContainer, BoxTitle, LabelWrapper, LabelContainer, LabelImage, AllergenName, ContentBox } from \"./allergyStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Allergy({\n  recipe\n}) {\n  _s();\n  var _recipe$contains;\n  const {\n    lang\n  } = useSetLang();\n  return /*#__PURE__*/_jsxDEV(AllergyContainer, {\n    children: [recipe.contains && /*#__PURE__*/_jsxDEV(ContentBox, {\n      children: [/*#__PURE__*/_jsxDEV(BoxTitle, {\n        children: lang === \"us\" ? \"Contains\" : lang === \"ru\" ? \"Содержит\" : \"Дорад\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LabelWrapper, {\n        children: recipe === null || recipe === void 0 ? void 0 : (_recipe$contains = recipe.contains) === null || _recipe$contains === void 0 ? void 0 : _recipe$contains.map((label, i) => {\n          return /*#__PURE__*/_jsxDEV(LabelContainer, {\n            children: [/*#__PURE__*/_jsxDEV(LabelImage, {\n              src: `/allergyLabels/${label}.png`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AllergenName, {\n              children: recipe === null || recipe === void 0 ? void 0 : recipe.labels[i][lang]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), recipe.diet && /*#__PURE__*/_jsxDEV(ContentBox, {\n      children: [/*#__PURE__*/_jsxDEV(BoxTitle, {\n        children: lang === \"us\" ? \"Diet\" : lang === \"ru\" ? \"Диета\" : \"Парҳез\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LabelWrapper, {\n        children: recipe === null || recipe === void 0 ? void 0 : recipe.diet.map((label, i) => {\n          return /*#__PURE__*/_jsxDEV(LabelContainer, {\n            children: [/*#__PURE__*/_jsxDEV(LabelImage, {\n              src: `/allergyLabels/${label}.png`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AllergenName, {\n              children: recipe === null || recipe === void 0 ? void 0 : recipe.dietLabels[i][lang]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Allergy, \"NvsmnYYTirKUJh2k5D2Oo2vHSrw=\", false, function () {\n  return [useSetLang];\n});\n_c = Allergy;\nvar _c;\n$RefreshReg$(_c, \"Allergy\");","map":{"version":3,"names":["React","useSetLang","AllergyContainer","BoxTitle","LabelWrapper","LabelContainer","LabelImage","AllergenName","ContentBox","jsxDEV","_jsxDEV","Allergy","recipe","_s","_recipe$contains","lang","children","contains","fileName","_jsxFileName","lineNumber","columnNumber","map","label","i","src","labels","diet","dietLabels","_c","$RefreshReg$"],"sources":["/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/components/food/allergy/Allergy.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSetLang } from \"../../../App\";\n\nimport {\n    AllergyContainer,\n    BoxTitle,\n    LabelWrapper,\n    LabelContainer,\n    LabelImage,\n    AllergenName,\n    ContentBox,\n} from \"./allergyStyles\"\n\nexport default function Allergy({ recipe }) {\n    const { lang } = useSetLang();\n    \n    return (\n        <AllergyContainer>\n            {recipe.contains && \n                <ContentBox>\n                    <BoxTitle>{lang === \"us\" ? \"Contains\" : (lang === \"ru\" ? \"Содержит\" : \"Дорад\")}</BoxTitle>\n                    <LabelWrapper>\n                        {recipe?.contains?.map((label, i) => {\n                            return (\n                                <LabelContainer key={i}>\n                                    <LabelImage src={`/allergyLabels/${label}.png`} />\n                                    <AllergenName>\n                                        {recipe?.labels[i][lang]}\n                                    </AllergenName>\n                                </LabelContainer>\n                            )\n                        })}\n                    </LabelWrapper>\n                </ContentBox>\n            }\n            {recipe.diet && \n                <ContentBox>\n                    <BoxTitle>{lang === \"us\" ? \"Diet\" : (lang === \"ru\" ? \"Диета\" : \"Парҳез\")}</BoxTitle>\n                    <LabelWrapper>\n                        {recipe?.diet.map((label, i) => {\n                            return (\n                                <LabelContainer key={i}>\n                                    <LabelImage src={`/allergyLabels/${label}.png`} />\n                                    <AllergenName>\n                                        {recipe?.dietLabels[i][lang]}\n                                    </AllergenName>\n                                </LabelContainer>\n                            )\n                        })}\n                    </LabelWrapper>\n                </ContentBox>\n            }\n        </AllergyContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}