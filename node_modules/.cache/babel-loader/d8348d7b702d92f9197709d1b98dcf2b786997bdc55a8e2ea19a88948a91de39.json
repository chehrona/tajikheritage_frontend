{"ast":null,"code":"var _jsxFileName = \"/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/components/poet/poetWorks/PoetWorks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSetLang } from \"../../../App\";\nimport { useMediaQuery } from 'react-responsive';\nimport BookshelfDesign from \"../bookshelfDesign/BookshelfDesign\";\nimport { MainContainer } from \"./poetWorksStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PoetWorks({\n  poet\n}) {\n  _s();\n  const {\n    lang\n  } = useSetLang();\n  const isMobile = useMediaQuery({\n    query: `(max-width: 480px)`\n  });\n  const [overlay, setOverlay] = useState(null);\n  const numBooks = poet[lang].length;\n  let shelfNum;\n  if (isMobile) {\n    shelfNum = Math.ceil(numBooks / 2);\n  } else {\n    shelfNum = Math.ceil(numBooks / 4);\n  }\n  function renderShelves(n) {\n    let shelves = [];\n    if (isMobile) {\n      for (let i = 0; i < n; i++) {\n        shelves.push( /*#__PURE__*/_jsxDEV(BookshelfDesign, {\n          overlay: overlay,\n          setOverlay: setOverlay,\n          shelfNum: i * 2,\n          work: poet[lang].slice(i * 2, (i + 1) * 2)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 30\n        }, this));\n      }\n    } else {\n      for (let i = 0; i < n; i++) {\n        shelves.push( /*#__PURE__*/_jsxDEV(BookshelfDesign, {\n          overlay: overlay,\n          setOverlay: setOverlay,\n          shelfNum: i * 4,\n          work: poet[lang].slice(i * 4, (i + 1) * 4)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this));\n      }\n    }\n    return shelves;\n  }\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    id: \"Works\",\n    children: renderShelves(shelfNum)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(PoetWorks, \"ScbmEfjpEUScXS2oFv92+liwx1g=\", false, function () {\n  return [useSetLang, useMediaQuery];\n});\n_c = PoetWorks;\nvar _c;\n$RefreshReg$(_c, \"PoetWorks\");","map":{"version":3,"names":["React","useState","useSetLang","useMediaQuery","BookshelfDesign","MainContainer","jsxDEV","_jsxDEV","PoetWorks","poet","_s","lang","isMobile","query","overlay","setOverlay","numBooks","length","shelfNum","Math","ceil","renderShelves","n","shelves","i","push","work","slice","fileName","_jsxFileName","lineNumber","columnNumber","id","children","_c","$RefreshReg$"],"sources":["/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/components/poet/poetWorks/PoetWorks.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSetLang } from \"../../../App\";\nimport { useMediaQuery } from 'react-responsive';\n\nimport BookshelfDesign from \"../bookshelfDesign/BookshelfDesign\";\nimport { MainContainer } from \"./poetWorksStyles\";\n\nexport default function PoetWorks({ poet }) {\n    const { lang } = useSetLang();\n    const isMobile = useMediaQuery({ query: `(max-width: 480px)` });\n    const [overlay, setOverlay] = useState(null);\n    const numBooks = poet[lang].length;\n    let shelfNum;\n\n    if (isMobile) {\n        shelfNum = Math.ceil(numBooks/2);\n    } else {\n        shelfNum = Math.ceil(numBooks/4);\n    }\n\n    function renderShelves(n){\n        let shelves = [];\n\n        if (isMobile) {\n            for (let i = 0; i < n; i++) {\n                shelves.push(<BookshelfDesign\n                                key={i}\n                                overlay={overlay}\n                                setOverlay={setOverlay}\n                                shelfNum={i * 2}\n                                work={poet[lang].slice(i * 2, (i + 1) * 2)}\n                            />);\n            }\n        } else {\n            for (let i = 0; i < n; i++) {\n                shelves.push(<BookshelfDesign\n                                key={i}\n                                overlay={overlay}\n                                setOverlay={setOverlay}\n                                shelfNum={i * 4}\n                                work={poet[lang].slice(i * 4, (i + 1) * 4)}\n                            />);\n            }\n        }\n\n        return shelves;\n    }\n\n    return (\n        <MainContainer id='Works'>\n            {renderShelves(shelfNum)}\n        </MainContainer>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,eAAe,MAAM,oCAAoC;AAChE,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAAC,CAAC;EAC7B,MAAMU,QAAQ,GAAGT,aAAa,CAAC;IAAEU,KAAK,EAAG;EAAoB,CAAC,CAAC;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMe,QAAQ,GAAGP,IAAI,CAACE,IAAI,CAAC,CAACM,MAAM;EAClC,IAAIC,QAAQ;EAEZ,IAAIN,QAAQ,EAAE;IACVM,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,QAAQ,GAAC,CAAC,CAAC;EACpC,CAAC,MAAM;IACHE,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,QAAQ,GAAC,CAAC,CAAC;EACpC;EAEA,SAASK,aAAaA,CAACC,CAAC,EAAC;IACrB,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAIX,QAAQ,EAAE;MACV,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;QACxBD,OAAO,CAACE,IAAI,eAAClB,OAAA,CAACH,eAAe;UAEbU,OAAO,EAAEA,OAAQ;UACjBC,UAAU,EAAEA,UAAW;UACvBG,QAAQ,EAAEM,CAAC,GAAG,CAAE;UAChBE,IAAI,EAAEjB,IAAI,CAACE,IAAI,CAAC,CAACgB,KAAK,CAACH,CAAC,GAAG,CAAC,EAAE,CAACA,CAAC,GAAG,CAAC,IAAI,CAAC;QAAE,GAJtCA,CAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKT,CAAC,CAAC;MACnB;IACJ,CAAC,MAAM;MACH,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;QACxBD,OAAO,CAACE,IAAI,eAAClB,OAAA,CAACH,eAAe;UAEbU,OAAO,EAAEA,OAAQ;UACjBC,UAAU,EAAEA,UAAW;UACvBG,QAAQ,EAAEM,CAAC,GAAG,CAAE;UAChBE,IAAI,EAAEjB,IAAI,CAACE,IAAI,CAAC,CAACgB,KAAK,CAACH,CAAC,GAAG,CAAC,EAAE,CAACA,CAAC,GAAG,CAAC,IAAI,CAAC;QAAE,GAJtCA,CAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKT,CAAC,CAAC;MACnB;IACJ;IAEA,OAAOR,OAAO;EAClB;EAEA,oBACIhB,OAAA,CAACF,aAAa;IAAC2B,EAAE,EAAC,OAAO;IAAAC,QAAA,EACpBZ,aAAa,CAACH,QAAQ;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAExB;AAACrB,EAAA,CA9CuBF,SAAS;EAAA,QACZN,UAAU,EACVC,aAAa;AAAA;AAAA+B,EAAA,GAFV1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}