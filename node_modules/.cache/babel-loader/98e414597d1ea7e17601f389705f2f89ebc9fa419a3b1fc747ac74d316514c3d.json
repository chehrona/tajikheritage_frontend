{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import{useSetLang}from\"../../App\";import{requestPage}from\"../../services/request\";import RecipeCard from'../../components/food/recipeCard/RecipeCard';import{PageContainer,RecipeBoxContainer}from'./cuisinePageStyles';import{jsx as _jsx}from\"react/jsx-runtime\";function Cuisine(){const location=useLocation();const{setLang}=useSetLang();const[recipes,setRecipes]=useState([]);const fetchData=async()=>{try{const data=await requestPage(\"cuisine\");setRecipes(data);}catch(error){console.error(\"Error fetching data:\",error);}};useEffect(()=>{// Get data\nfetchData();if(location.search.length){setLang(location.search.substring(1));}},[]);return/*#__PURE__*/_jsx(PageContainer,{children:/*#__PURE__*/_jsx(RecipeBoxContainer,{justify:recipes===null||recipes===void 0?void 0:recipes.length,children:recipes===null||recipes===void 0?void 0:recipes.map((recipe,i)=>{return/*#__PURE__*/_jsx(RecipeCard,{recipe:recipe,i:i},i);})})});}export default Cuisine;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useSetLang","requestPage","RecipeCard","PageContainer","RecipeBoxContainer","jsx","_jsx","Cuisine","location","setLang","recipes","setRecipes","fetchData","data","error","console","search","length","substring","children","justify","map","recipe","i"],"sources":["/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/landingPages/cuisine/Cuisine.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSetLang } from \"../../App\";\n\nimport { requestPage } from \"../../services/request\";\n\nimport RecipeCard from '../../components/food/recipeCard/RecipeCard';\n\nimport { PageContainer, RecipeBoxContainer } from './cuisinePageStyles';\n\nfunction Cuisine() {\n    const location = useLocation();\n    const { setLang } = useSetLang();\n    const [recipes, setRecipes] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const data = await requestPage(\"cuisine\");\n            setRecipes(data);\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        // Get data\n        fetchData();\n\n        if (location.search.length) {\n            setLang(location.search.substring(1));\n        }\n    }, []);\n\n    return (\n        <PageContainer>\n            <RecipeBoxContainer justify={recipes?.length}>\n                {recipes?.map((recipe, i) => {\n                    return (<RecipeCard key={i} recipe={recipe} i={i} />);\n                })}\n            </RecipeBoxContainer>\n        </PageContainer>\n    );\n}\n\nexport default Cuisine;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,UAAU,KAAQ,WAAW,CAEtC,OAASC,WAAW,KAAQ,wBAAwB,CAEpD,MAAO,CAAAC,UAAU,KAAM,6CAA6C,CAEpE,OAASC,aAAa,CAAEC,kBAAkB,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExE,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACf,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEU,OAAQ,CAAC,CAAGT,UAAU,CAAC,CAAC,CAChC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAc,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,WAAW,CAAC,SAAS,CAAC,CACzCU,UAAU,CAACE,IAAI,CAAC,CACpB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAEDjB,SAAS,CAAC,IAAM,CACZ;AACAe,SAAS,CAAC,CAAC,CAEX,GAAIJ,QAAQ,CAACQ,MAAM,CAACC,MAAM,CAAE,CACxBR,OAAO,CAACD,QAAQ,CAACQ,MAAM,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC,CACzC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIZ,IAAA,CAACH,aAAa,EAAAgB,QAAA,cACVb,IAAA,CAACF,kBAAkB,EAACgB,OAAO,CAAEV,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEO,MAAO,CAAAE,QAAA,CACxCT,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEW,GAAG,CAAC,CAACC,MAAM,CAAEC,CAAC,GAAK,CACzB,mBAAQjB,IAAA,CAACJ,UAAU,EAASoB,MAAM,CAAEA,MAAO,CAACC,CAAC,CAAEA,CAAE,EAAxBA,CAA0B,CAAC,CACxD,CAAC,CAAC,CACc,CAAC,CACV,CAAC,CAExB,CAEA,cAAe,CAAAhB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}