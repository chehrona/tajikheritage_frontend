{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useSetLang}from\"../../App\";import{useParams}from\"react-router-dom\";import{IconButton}from\"@mui/material\";import{MainContainer,PrintHeader,Title,RecipeTitle,Subtitle,InfoContainer,IconBox,StyledCookIcon,StyledTotalIcon,StyledPrepIcon,StyledServeIcon,QuantityContainer,ServeContainer,StyledAddIcon,StyledMinusIcon,ServeAmount,PrintContainer,PrintBox,ServeBox,PrintBodyContainer,PrintImage,LeftSection,RightSection,Ingredient,BoxTitle,DirectionBox,StepIndex,Header,Logo,LogoWrapper,StyledLink}from'./recipePagePrintStyles';export default function RecipePagePrint(){// const { id } = useParams(),\n//     recipe = recipes.filter((recipe) => recipe.id === id)[0],\n//     { lang, setIsPrint } = useSetLang(),\n//     [servings, setServings] = useState(recipe?.startServing),\n//     [showTop, setShowTop] = useState(true);\n// useEffect(() => {\n//     setIsPrint(true);\n// }, []);\n// useEffect(() => {\n//     if (!showTop) {\n//         window.print();\n//     }\n//     setShowTop(true);\n// }, [showTop]);\n// function reduceServings() {\n//     let inputValue = servings;\n//     if (inputValue > 1) {\n//         inputValue = inputValue - 1;\n//         setServings(inputValue);\n//     } else {\n//         alert(recipe?.servingAlert[lang]);\n//     }\n// }\n// function increaseServings(e) {\n//     let inputValue = servings;\n//     inputValue = inputValue + 1;\n//     setServings(inputValue);\n// }\n// function getServings(e) {\n//     let inputValue = e.target.value;\n//     setServings(inputValue);\n// }\n// return (\n//     <MainContainer>\n//         <Header>\n//             <LogoWrapper>\n//                 <StyledLink to={'/'}>\n//                     <Logo src={'/tajikPrint.png'}></Logo>\n//                 </StyledLink>\n//             </LogoWrapper>\n//             <Title>\n//                 <div>TAJIK</div>\n//                 <div>HERITAGE</div>\n//             </Title>\n//         </Header>\n//         <PrintHeader>\n//             {showTop && <ServeBox>\n//                 <QuantityContainer>\n//                     <div>\n//                         {lang === 'ru' ? 'Порции' : \n//                         (lang === 'tj' ? 'Портсия' : 'Servings')}\n//                     </div>\n//                     <ServeContainer>\n//                         <IconButton onClick={reduceServings}>\n//                             <StyledMinusIcon />\n//                         </IconButton>\n//                         <ServeAmount value={servings} onChange={(e) => getServings(e)}/>\n//                         <IconButton onClick={increaseServings}>\n//                             <StyledAddIcon />\n//                         </IconButton>\n//                     </ServeContainer>\n//                 </QuantityContainer>\n//                 <PrintContainer>\n//                     <div>{lang === 'ru' ? 'Расспечатать' : \n//                         (lang === 'tj' ? 'Чоп кунед' : 'Print')}\n//                     </div>\n//                     <IconButton onClick={() => setShowTop(false)}>\n//                         <PrintBox src={'/printIcons/print.png'}></PrintBox>\n//                     </IconButton>\n//                 </PrintContainer>\n//             </ServeBox>}\n//             <RecipeTitle>{recipe?.title[lang]}</RecipeTitle>\n//             <Subtitle>{recipe?.subtitle[lang]}</Subtitle>\n//         </PrintHeader>\n//         <PrintBodyContainer>\n//             <LeftSection>\n//                 <PrintImage src={recipe?.mainImg} />\n//                 <div>\n//                     <BoxTitle>{recipe.ingredientsLang[lang]}</BoxTitle>\n//                     {recipe?.ingredients[lang].map((entry, i) => {\n//                         return (\n//                             <Ingredient key={i} dangerouslySetInnerHTML={{__html: entry}}></Ingredient>\n//                         )\n//                     })}\n//                 </div>\n//             </LeftSection>\n//             <RightSection>\n//                 <InfoContainer>\n//                     <IconBox>\n//                         <StyledServeIcon src={`/printIcons/serving.png`} />\n//                         <div>{servings} {recipe?.serving[lang]}</div>\n//                     </IconBox>\n//                     <IconBox>\n//                         <StyledTotalIcon src={`/printIcons/total.png`} />\n//                         <div>{recipe?.time[lang].total}</div>\n//                     </IconBox>\n//                     <IconBox>\n//                         <StyledPrepIcon src={`/printIcons/prep.png`} />\n//                         <div>{recipe?.time[lang].prep}</div>\n//                     </IconBox>\n//                     <IconBox>\n//                         <StyledCookIcon src={`/printIcons/cook.png`} />\n//                         <div>{recipe?.time[lang].cook}</div>\n//                     </IconBox>\n//                 </InfoContainer>\n//                 <div>\n//                     <BoxTitle>{recipe.directionsLang[lang]}</BoxTitle>\n//                     {recipe?.directions[lang].map((entry, i) => {\n//                         return (\n//                             <DirectionBox key={i}>\n//                                 <StepIndex>\n//                                     <div>{i + 1}.</div>\n//                                 </StepIndex>\n//                                 <Ingredient key={i} dangerouslySetInnerHTML={{__html: entry}}></Ingredient>\n//                             </DirectionBox>     \n//                         )\n//                     })}\n//                 </div>\n//             </RightSection>\n//         </PrintBodyContainer>\n//         {/* {showTop && <SideNav />} */}\n//     </MainContainer>\n// )\n}","map":{"version":3,"names":["React","useState","useEffect","useSetLang","useParams","IconButton","MainContainer","PrintHeader","Title","RecipeTitle","Subtitle","InfoContainer","IconBox","StyledCookIcon","StyledTotalIcon","StyledPrepIcon","StyledServeIcon","QuantityContainer","ServeContainer","StyledAddIcon","StyledMinusIcon","ServeAmount","PrintContainer","PrintBox","ServeBox","PrintBodyContainer","PrintImage","LeftSection","RightSection","Ingredient","BoxTitle","DirectionBox","StepIndex","Header","Logo","LogoWrapper","StyledLink","RecipePagePrint"],"sources":["/Users/chehronasmacbookair/Desktop/thetajikheritage.com/frontend/src/finalPages/recipePage/RecipePagePrint.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSetLang } from \"../../App\";\nimport { useParams } from \"react-router-dom\";\n\nimport { IconButton } from \"@mui/material\";\n\nimport {\n    MainContainer,\n    PrintHeader,\n    Title,\n    RecipeTitle,\n    Subtitle,\n    InfoContainer,\n    IconBox,\n    StyledCookIcon,\n    StyledTotalIcon,\n    StyledPrepIcon,\n    StyledServeIcon,\n    QuantityContainer,\n    ServeContainer,\n    StyledAddIcon,\n    StyledMinusIcon,\n    ServeAmount,\n    PrintContainer,\n    PrintBox,\n    ServeBox,\n    PrintBodyContainer,\n    PrintImage,\n    LeftSection,\n    RightSection,\n    Ingredient,\n    BoxTitle,\n    DirectionBox,\n    StepIndex,\n    Header,\n    Logo,\n    LogoWrapper,\n    StyledLink\n} from './recipePagePrintStyles'\n\nexport default function RecipePagePrint() {\n    // const { id } = useParams(),\n    //     recipe = recipes.filter((recipe) => recipe.id === id)[0],\n    //     { lang, setIsPrint } = useSetLang(),\n    //     [servings, setServings] = useState(recipe?.startServing),\n    //     [showTop, setShowTop] = useState(true);\n\n    // useEffect(() => {\n    //     setIsPrint(true);\n    // }, []);\n\n    // useEffect(() => {\n    //     if (!showTop) {\n    //         window.print();\n    //     }\n    //     setShowTop(true);\n\n    // }, [showTop]);\n\n    // function reduceServings() {\n    //     let inputValue = servings;\n    //     if (inputValue > 1) {\n    //         inputValue = inputValue - 1;\n    //         setServings(inputValue);\n    //     } else {\n    //         alert(recipe?.servingAlert[lang]);\n    //     }\n    // }\n\n    // function increaseServings(e) {\n    //     let inputValue = servings;\n    //     inputValue = inputValue + 1;\n    //     setServings(inputValue);\n    // }\n\n    // function getServings(e) {\n    //     let inputValue = e.target.value;\n    //     setServings(inputValue);\n    // }\n\n    // return (\n    //     <MainContainer>\n    //         <Header>\n    //             <LogoWrapper>\n    //                 <StyledLink to={'/'}>\n    //                     <Logo src={'/tajikPrint.png'}></Logo>\n    //                 </StyledLink>\n    //             </LogoWrapper>\n    //             <Title>\n    //                 <div>TAJIK</div>\n    //                 <div>HERITAGE</div>\n    //             </Title>\n    //         </Header>\n    //         <PrintHeader>\n    //             {showTop && <ServeBox>\n    //                 <QuantityContainer>\n    //                     <div>\n    //                         {lang === 'ru' ? 'Порции' : \n    //                         (lang === 'tj' ? 'Портсия' : 'Servings')}\n    //                     </div>\n    //                     <ServeContainer>\n    //                         <IconButton onClick={reduceServings}>\n    //                             <StyledMinusIcon />\n    //                         </IconButton>\n    //                         <ServeAmount value={servings} onChange={(e) => getServings(e)}/>\n    //                         <IconButton onClick={increaseServings}>\n    //                             <StyledAddIcon />\n    //                         </IconButton>\n    //                     </ServeContainer>\n    //                 </QuantityContainer>\n    //                 <PrintContainer>\n    //                     <div>{lang === 'ru' ? 'Расспечатать' : \n    //                         (lang === 'tj' ? 'Чоп кунед' : 'Print')}\n    //                     </div>\n    //                     <IconButton onClick={() => setShowTop(false)}>\n    //                         <PrintBox src={'/printIcons/print.png'}></PrintBox>\n    //                     </IconButton>\n    //                 </PrintContainer>\n    //             </ServeBox>}\n    //             <RecipeTitle>{recipe?.title[lang]}</RecipeTitle>\n    //             <Subtitle>{recipe?.subtitle[lang]}</Subtitle>\n    //         </PrintHeader>\n    //         <PrintBodyContainer>\n    //             <LeftSection>\n    //                 <PrintImage src={recipe?.mainImg} />\n    //                 <div>\n    //                     <BoxTitle>{recipe.ingredientsLang[lang]}</BoxTitle>\n    //                     {recipe?.ingredients[lang].map((entry, i) => {\n    //                         return (\n    //                             <Ingredient key={i} dangerouslySetInnerHTML={{__html: entry}}></Ingredient>\n    //                         )\n    //                     })}\n    //                 </div>\n    //             </LeftSection>\n    //             <RightSection>\n    //                 <InfoContainer>\n    //                     <IconBox>\n    //                         <StyledServeIcon src={`/printIcons/serving.png`} />\n    //                         <div>{servings} {recipe?.serving[lang]}</div>\n    //                     </IconBox>\n    //                     <IconBox>\n    //                         <StyledTotalIcon src={`/printIcons/total.png`} />\n    //                         <div>{recipe?.time[lang].total}</div>\n    //                     </IconBox>\n    //                     <IconBox>\n    //                         <StyledPrepIcon src={`/printIcons/prep.png`} />\n    //                         <div>{recipe?.time[lang].prep}</div>\n    //                     </IconBox>\n    //                     <IconBox>\n    //                         <StyledCookIcon src={`/printIcons/cook.png`} />\n    //                         <div>{recipe?.time[lang].cook}</div>\n    //                     </IconBox>\n    //                 </InfoContainer>\n    //                 <div>\n    //                     <BoxTitle>{recipe.directionsLang[lang]}</BoxTitle>\n    //                     {recipe?.directions[lang].map((entry, i) => {\n    //                         return (\n    //                             <DirectionBox key={i}>\n    //                                 <StepIndex>\n    //                                     <div>{i + 1}.</div>\n    //                                 </StepIndex>\n    //                                 <Ingredient key={i} dangerouslySetInnerHTML={{__html: entry}}></Ingredient>\n    //                             </DirectionBox>     \n    //                         )\n    //                     })}\n    //                 </div>\n    //             </RightSection>\n    //         </PrintBodyContainer>\n    //         {/* {showTop && <SideNav />} */}\n    //     </MainContainer>\n    // )\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,WAAW,CACtC,OAASC,SAAS,KAAQ,kBAAkB,CAE5C,OAASC,UAAU,KAAQ,eAAe,CAE1C,OACIC,aAAa,CACbC,WAAW,CACXC,KAAK,CACLC,WAAW,CACXC,QAAQ,CACRC,aAAa,CACbC,OAAO,CACPC,cAAc,CACdC,eAAe,CACfC,cAAc,CACdC,eAAe,CACfC,iBAAiB,CACjBC,cAAc,CACdC,aAAa,CACbC,eAAe,CACfC,WAAW,CACXC,cAAc,CACdC,QAAQ,CACRC,QAAQ,CACRC,kBAAkB,CAClBC,UAAU,CACVC,WAAW,CACXC,YAAY,CACZC,UAAU,CACVC,QAAQ,CACRC,YAAY,CACZC,SAAS,CACTC,MAAM,CACNC,IAAI,CACJC,WAAW,CACXC,UAAU,KACP,yBAAyB,CAEhC,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CACt},"metadata":{},"sourceType":"module","externalDependencies":[]}